name: 'GCP VM Deploy'
on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PROJECT_ID: dynamic-now-438707-c1
  ZONE: asia-south1-b
  VM_NAME: hello-test
  MACHINE_TYPE: e2-micro
  IMAGE_FAMILY: ubuntu-2404-lts-amd64
  IMAGE_PROJECT: ubuntu-os-cloud
  REPO_URL: https://github.com/madhuri-9182/test.git

jobs:
  gce-image-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/568722140219/locations/global/workloadIdentityPools/github-pool/providers/github'
          service_account: 'github-actions@dynamic-now-438707-c1.iam.gserviceaccount.com'

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Check if VM exists and Create VM instance if needed
        run: |
          # Check if VM exists
          if ! gcloud compute instances describe "$VM_NAME" --zone="$ZONE" --project="$PROJECT_ID" --quiet >/dev/null 2>&1; then
            echo "⚠️ VM $VM_NAME does not exist. Creating it..."
            
            gcloud compute instances create "$VM_NAME" \
            --project="$PROJECT_ID" \
            --zone="$ZONE" \
            --machine-type="$MACHINE_TYPE" \
            --image-family="$IMAGE_FAMILY" \
            --image-project="$IMAGE_PROJECT" \
            --tags=http-server,https-server \
            --boot-disk-size=10GB \
            --metadata=startup-script="#!/bin/bash
          set -e
          sudo apt-get update -y
          apt-get install -y python3 python3-pip python3-venv git
          git clone $REPO_URL . || (git pull)
          echo '✅ Base packages and app cloned successfully.'
          cd test
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          "

      - name: Configure Gunicorn service on VM
        run: |
          echo "⚙️ Configuring Gunicorn systemd service..."
          gcloud compute ssh "$VM_NAME" --zone "$ZONE" --project "$PROJECT_ID" --command "
          sudo bash -c '
          cat > /etc/systemd/system/gunicorn.service <<EOF
          [Unit]
          Description=Gunicorn Service for Test App
          After=network.target

          [Service]
          User=root
          WorkingDirectory=/home/madhurisomannagari75/test
          ExecStart=/home/madhurisomannagari75/test/venv/bin/gunicorn --bind 0.0.0.0:8000 app:app
          Restart=always

          [Install]
          WantedBy=multi-user.target
          EOF

          cd /opt/app
          pip3 install -r requirements.txt || true
          systemctl daemon-reload
          systemctl enable gunicorn.service
          systemctl start gunicorn.service
          systemctl status gunicorn.service --no-pager -l
          echo \"✅ Gunicorn service started successfully.\"
          '"

      - name: Confirm VM is running
        run: |
          echo "🔍 Checking VM status..."
          gcloud compute instances describe "$VM_NAME" \
            --zone="$ZONE" \
            --project="$PROJECT_ID" \
            --format="value(status)"